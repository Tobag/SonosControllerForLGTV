'use strict';

var request = require('./helpers/request');
var logger = require('./helpers/logger');
var DEFAULT_RETRY_INTERVAL = 5000;
var DEFAULT_SUBSCRIPTION_INTERVAL = 600;

function Subscriber(subscribeUrl, notificationUrl, _subscriptionInterval, _retryInterval) {
  var sid = void 0;
  var timer = void 0;

  // This is configurable just for testing purposes
  var subscriptionInterval = _subscriptionInterval || DEFAULT_SUBSCRIPTION_INTERVAL;
  var retryInterval = _retryInterval || DEFAULT_RETRY_INTERVAL;

  this.dispose = function dispose() {
    clearTimeout(timer);
    request({
      headers: {
        SID: sid
      },
      uri: subscribeUrl,
      method: 'UNSUBSCRIBE',
      stream: true
    }).then(function () {
      logger.trace('successfully unsubscribed from', subscribeUrl);
    }).catch(function (e) {
      logger.error('unsubscribe from sid ' + sid + ' failed', e);
    });
  };

  function subscribe() {
    clearTimeout(timer);
    var headers = {
      TIMEOUT: 'Second-' + subscriptionInterval
    };

    if (sid) {
      headers.SID = sid;
    } else {
      headers.CALLBACK = '<' + notificationUrl + '>';
      headers.NT = 'upnp:event';
    }

    request({
      headers: headers,
      uri: subscribeUrl,
      method: 'SUBSCRIBE',
      stream: true
    }).then(function (res) {
      sid = res.headers.sid;
      timer = setTimeout(subscribe, subscriptionInterval * 500);
    }).catch(function (e) {
      console.error('resubscribing to sid ' + sid + ' failed', e);
      sid = null;
      timer = setTimeout(subscribe, retryInterval);
    });
  }

  subscribe();
}

module.exports = Subscriber;
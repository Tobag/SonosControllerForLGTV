'use strict';

var expect = require('chai').expect;
var sinon = require('sinon');
var proxyquire = require('proxyquire');
require('chai').use(require('sinon-chai'));

describe('Player.calculateGroupVolume', function () {
  var recalculateGroupVolume = require('../../../../lib/prototypes/Player/recalculateGroupVolume.js');
  var players = void 0;
  var coordinator = void 0;
  var system = void 0;

  beforeEach(function () {
    coordinator = {
      uuid: '123456789',
      groupState: {
        volume: 10
      }
    };

    players = [{
      system: system,
      coordinator: coordinator,
      setVolume: sinon.spy(),
      _setVolume: sinon.spy(),
      state: {
        volume: 15
      }
    }, {
      system: system,
      coordinator: coordinator,
      setVolume: sinon.spy(),
      _setVolume: sinon.spy(),
      state: {
        volume: 20
      }
    }, {
      system: system,
      coordinator: coordinator,
      setVolume: sinon.spy(),
      _setVolume: sinon.spy(),
      state: {
        volume: 30
      }
    }];

    system = {
      zones: [{
        uuid: coordinator.uuid,
        members: players
      }]
    };

    coordinator.system = system;
  });

  describe('When recalculating group volume', function () {

    beforeEach(function () {
      return recalculateGroupVolume.call(coordinator);
    });

    it('should have updated groupState.volume', function () {
      expect(coordinator.groupState.volume).equal(22);
    });
  });
});